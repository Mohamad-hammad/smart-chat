# ===========================================
# PRODUCTION DEPLOYMENT CONFIGURATION
# ===========================================

# Database Configuration (REQUIRED)
# For production, use a managed database service like Supabase, PlanetScale, or AWS RDS
DATABASE_URL=postgresql://username:password@host:port/database_name

# Alternative Database Configuration (if not using DATABASE_URL)
# Individual database connection parameters
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=your_password
DB_NAME=smart_chat_db

# For testing (optional)
TEST_DATABASE_URL=postgresql://username:password@localhost:5432/test_database_name

# Email Configuration (REQUIRED for user invitations)
# Gmail SMTP Configuration
EMAIL_USER=your-email@gmail.com
EMAIL_APP_PASSWORD=your-gmail-app-password

# Google OAuth Configuration (REQUIRED for Google Sign-In)
# Get these from Google Cloud Console
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# NextAuth Configuration (REQUIRED)
# Generate a secure secret: openssl rand -base64 32
NEXTAUTH_SECRET=your-nextauth-secret-key
# For production, use your actual domain
NEXTAUTH_URL=https://your-domain.com

# Application Configuration (REQUIRED)
# For production, use your actual domain
NEXT_PUBLIC_BASE_URL=https://your-domain.com

# N8N Webhook Configuration (OPTIONAL)
# If you have an n8n instance running, add your webhook URL here
# N8N_WEBHOOK_URL=https://your-n8n-instance.com/webhook/chatbot-conversations

# Stripe Configuration (REQUIRED for payments)
# Get these from your Stripe Dashboard
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Application URL (REQUIRED for Stripe webhooks)
NEXT_PUBLIC_APP_URL=https://your-domain.com

# ===========================================
# DEPLOYMENT NOTES
# ===========================================
# 1. Copy this file to .env.local for local development
# 2. Set these variables in your deployment platform (Vercel, Netlify, etc.)
# 3. For Gmail SMTP:
#    - Enable 2-Step Verification
#    - Generate an App Password
#    - Use the App Password instead of your regular password
# 4. For Google OAuth:
#    - Create a project in Google Cloud Console
#    - Enable Google+ API
#    - Create OAuth 2.0 credentials
#    - Add your domain to authorized origins
# 5. For production database:
#    - Use a managed PostgreSQL service
#    - Enable SSL connections
#    - Set up proper backup and monitoring
