name: Test and Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    env:
      NODE_ENV: test
      TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Clear npm cache
      run: npm cache clean --force

    - name: Install dependencies (with retry)
      run: |
        echo "Attempting to install dependencies..."
        for i in 1 2 3; do
          echo "Attempt $i of 3..."
          if npm ci --legacy-peer-deps --no-audit --no-fund; then
            echo "Dependencies installed successfully!"
            break
          else
            echo "Attempt $i failed. Retrying..."
            if [ $i -lt 3 ]; then
              sleep 10
              npm cache clean --force
            fi
          fi
        done
        
        if [ $? -ne 0 ]; then
          echo "All attempts failed. Trying alternative approach..."
          npm install --legacy-peer-deps --no-audit --no-fund
        fi

    - name: Run ESLint
      run: npm run test:lint

    - name: Run build
      run: npm run test:build

    - name: Run tests
      run: npm run test:ci

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  lint-only:
    runs-on: ubuntu-latest
    name: ESLint Check

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Clear npm cache
      run: npm cache clean --force

    - name: Install dependencies (with retry)
      run: |
        echo "Attempting to install dependencies..."
        for i in 1 2 3; do
          echo "Attempt $i of 3..."
          if npm ci --legacy-peer-deps --no-audit --no-fund; then
            echo "Dependencies installed successfully!"
            break
          else
            echo "Attempt $i failed. Retrying..."
            if [ $i -lt 3 ]; then
              sleep 10
              npm cache clean --force
            fi
          fi
        done
        
        if [ $? -ne 0 ]; then
          echo "All attempts failed. Trying alternative approach..."
          npm install --legacy-peer-deps --no-audit --no-fund
        fi

    - name: Run ESLint with detailed output
      run: |
        echo "Running ESLint..."
        npm run lint --silent
        echo "ESLint completed successfully!"

    - name: Check for ESLint errors (not warnings)
      run: |
        echo "Checking ESLint output for errors..."
        # Run ESLint and capture output
        LINT_OUTPUT=$(npm run lint 2>&1)
        echo "$LINT_OUTPUT"
        
        # Count actual errors (not warnings) - exclude summary lines
        ERROR_COUNT=$(echo "$LINT_OUTPUT" | grep -v "✖.*problems" | grep -c "error" || echo "0")
        WARNING_COUNT=$(echo "$LINT_OUTPUT" | grep -c "warning" || echo "0")
        
        echo "Found $ERROR_COUNT errors and $WARNING_COUNT warnings"
        
        if [ "$ERROR_COUNT" -gt 0 ]; then
          echo "❌ ESLint found errors! Build will fail."
          exit 1
        else
          echo "✅ No ESLint errors found (only warnings). Build will continue."
          exit 0
        fi
